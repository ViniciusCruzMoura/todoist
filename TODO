
CardCredenciamento, issue validating whether there is a customer at the same address. The query is wrong,
you shouldn't use the neighborhood and street IDs as clauses, because they are unique for each address.
It's better to filter by name.

New certification in CardCredenciamento. Configure the application to support the CardMais certificates.
The CardMais endpoint requires a certificate, token, and other requirements, so it will be necessary
to prepare CardCredenciamento to function for consuming services on the server.

The idea is, 
If the protocol is "mesa de analise", when registering the client in the SGV and generating the ID, 
then the Consultant must be proactively notified via Cardoso, with the protocol number and the generated SGVID.
The Question is, how to notify the seller via WhatsApp when the SGVID is generated?
Perhaps by creating a webhook where the SGR makes calls when the SGV phase is completed, passing only the protocol
or CPF/CNPJ, something like that.
Explore the implementation within the SgvWs class or the SGR's BotService class to inject a call to the webhook
when the protocol enters the "Aguardando Consultor" phase.
Idea, perhaps make a procedure inside ADM_SGV to consume the webhook, then make a trigger that call the procedure

How to make a AABB collision and collision resolution?

On the cardcredenciamento, extract 'fases' function to a separate file 'chatbot.py'. Run the 
following command to get the list of functions.
    grep -n "def.*fases.*(.*):" apps/recarga/modules/funcoes.py
Then run each function with django shell and check the behavior.
    python manage.py shell << EOF
    from apps.recarga.modules.funcoes import *
    print( buscar_fases_do_credenciamento("99584557068", "03457654000") )
    print( buscar_fases_do_credenciamento_por_cliente("99584557068") )
    EOF
Check where it was imported.
    grep -rn --include=*.{py,} -e "import buscar_fases_do_credenciamento" -e "f\.buscar_fases_" apps/
And run the unit tests with docker.
    docker build --network=host -t cardcredenciamento:test . \
    && docker run --rm --network=host --env-file .env cardcredenciamento:test sh -c "python -m unittest discover tests/unit" \
    &8 docker rmi cardcredenciamento:test --force
Refactor these uses by moving to a new modules file and change the imports in all source code.

On the cardcredenciamento, extract functions about 'serasa', 'receita' and 'sefaz' to a own file. 
Run the following command to get the list of functions.
    grep -n -e "def.*receita" -e "def.*sefaz" -e "def.*serasa" apps/recarga/modules/funcoes.py
Then run each function with django shell and check the behavior.
    python manage.py shell << EOF
    from apps.recarga.modules.funcoes import *
    print( pegar_data_constituicao_receita("97441216000124") )
    EOF
And run the unit tests with docker.
    docker build --network=host -t cardcredenciamento:test . \
    && docker run --rm --network=host --env-file .env cardcredenciamento:test sh -c "python -m unittest discover tests/unit" \
    &8 docker rmi cardcredenciamento:test --force
Refactor these uses by moving to a new modules file and change the imports in all source code.

On cardconnect, exception in production environment.
    Internal Server Error: /chatonline/48455553de6a453b7677fadc/
    Traceback (most recent call last):
      File "/usr/local/lib/python3.9/site-packages/django/core/handlers/exception.py", line 55, in inner
        response = get_response(request)
      File "/sistemas/apps/botpresscore/views.py", line 313, in detail_chat_aovivo
        api_response_msg = api_instance_msg.list_messages(app_id, appuserid)
    AttributeError: module 'sunshine_conversations_client.model' has no attribute 'dict'

On the cardcredenciamento, remove the type 'NOVO' and add the new types 'SUBADQ' and 'RECARGA'

On the cardcredenciamento, check if the application always wait the SGR return the SGVID
when it's automatic flow, the user is complaining he does not.

On the cardcredenciamento, when a protocol create a SGVID then send a whatsapp notification to conversationid

On the cardcredenciamento, improve the CPF extraction from CNPJ for MEI and ME clients

SP3 migration, botpress v12

On the cardterminais, build a function that insert errors in 'ADM_SGV_JDE.LOG_SGV_ERR' table
    make a monitoring task that check every day as 6 o'clock if there a d-1 register on the table
    use the same structer already created on the tasks package

On the cardterminais, exception in production environment.
[2025-02-27 16:39:00 -0400] [15] [DEBUG] GET /card_terminais/api/v1/workfinity/os/abrir
Traceback (most recent call last):
  File "/usr/src/apps/terminal_android/views/ordem_avulsa.py", line 43, in abrir_ordem_de_servico_avulsa
    detalhe = ordem_avulsa_abrir(cliente.get('id'),
  File "/usr/src/apps/terminal_android/modules/ordem_avulsa.py", line 83, in ordem_avulsa_abrir
    protocolo = registrar_em_um_protocolo(pdv, empresa, ordem_servico)
  File "/usr/src/apps/terminal_android/modules/ordem_avulsa.py", line 63, in registrar_em_um_protocolo
    finalizar_protocolo_no_sgr(protocolo.get('detalhe')['solicitacao']['chamado']['protocolo'])
'NoneType' object is not subscriptable
TypeError: 'NoneType' object is not subscriptable
192.168.16.3 - - [27/Feb/2025:16:39:13 -0400] "
GET /card_terminais/api/v1/workfinity/os/abrir?eeid=1270580&tipo=Credenciamento+novo&motivo=instala%C3%A7%C3%A3o+de+uma+pos+adicional+
HTTP/1.0" 500 86 "-" "python-requests/2.32.3"

On the cardterminais, remove the email "vinicius.moura@cardway.com.br".
    grep -n "vinicius.moura@cardway.com.br" apps/terminal_android/views/remessa.py

On the cardterminais, extract the send email logic from view. Run the
following command to find where need change.
    grep -n "enviar_comprovante_de_aceite_via_email(.*" apps/terminal_android/views/remessa.py
Refactor these implementations.

On the cardcredenciamento, avoid nested ifs of 'estabelecimentos_info' variable. Run the 
following command to get the list of functions.
    grep -rn --include=*.py "def buscar_cliente_id(.*):"

On the cardconnect, remove the environment variable not used in the 'docker-compose.yml'
and 'settings.py'. Run the following command to get the list of environment variable.
    echo "$PWD/core/settings.py:"
    for line in $(cat .env.example); do
        grep -n "${line//=/\',}" core/settings.py
    done
    echo "$PWD/docker-compose.yml:"
    for line in $(cat .env.example); do
         grep -n "${line//=/}" docker-compose.yml
    done
Then delete the unused variable and test the apis inside the docker container.
    docker build --network=host -t $(basename $PWD) .
    docker run -it --rm --network=host --env-file .env --name $(basename $PWD) \
        -v "$PWD":/"$(basename $PWD)" -w /"$(basename $PWD)" $(basename $PWD) bash
Fix these uses by change environment variable values.

On the cardterminais, refactoring code of generated protocol in response,
    before the request ending for client without wkf, extract to small function

